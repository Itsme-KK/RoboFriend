{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","CardArray","map","user","i","components_Card","key","SearchBox","searchfields","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredrobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"yNAaeA,EAXF,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,KAAOC,EAAWH,EAAXG,MACtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uDACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAM,SAASC,IAAG,wBAAAC,OAA4BT,EAA5B,cACvBG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,MCcLQ,EAnBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OAEVC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GAChC,OACIZ,EAAAC,EAAAC,cAACW,EAAD,CACAC,IAAKN,EAAOX,GACZA,GAAIc,EAAKd,GACTC,KAAMU,EAAOI,GAAGd,KAChBC,MAAOS,EAAOI,GAAGb,UAKzB,OACIC,EAAAC,EAAAC,cAAA,WACKO,ICHEM,EAbG,SAAAnB,GAAoCA,EAAjCoB,aAAiC,IAAnBC,EAAmBrB,EAAnBqB,aAC/B,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACbH,EAAAC,EAAAC,cAAA,SACIC,UAAY,mCACZe,KAAO,SACPC,YAAc,gBACdC,SAAYH,MCCbI,EARA,SAACC,GACZ,OACItB,EAAAC,EAAAC,cAAA,OAAKqB,MAAS,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACnEJ,EAAMK,WCwCJC,qBAtCX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAAEtB,aAAeqB,EAAME,OAAOC,SAb5CX,EAAKY,MAAQ,CACTjC,OAAS,GACTQ,aAAe,IAJVa,mFAQM,IAAAa,EAAAV,KACfW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE9B,OAASuC,uCAOnC,IAAAC,EAC0BhB,KAAKS,MAA7BjC,EADFwC,EACExC,OAAQQ,EADVgC,EACUhC,aACTiC,EAAiBzC,EAAO0C,OAAO,SAAAC,GACjC,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASrC,EAAaoC,iBAG9D,OAAQ5C,EAAO8C,OAGPtD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,MAAhB,eACAH,EAAAC,EAAAC,cAACqD,EAAD,CAAWtC,aAAgBe,KAAKI,iBAChCpC,EAAAC,EAAAC,cAACsD,EAAD,KACIxD,EAAAC,EAAAC,cAACuD,EAAD,CAAUjD,OAAUyC,MANhCjD,EAAAC,EAAAC,cAAA,4BA1BUwD,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAAhD,GAAiD,IAA9CqE,EAA8CrE,EAA9CqE,OAAQC,EAAsCtE,EAAtCsE,OAAQC,EAA8BvE,EAA9BuE,OAAQC,EAAsBxE,EAAtBwE,OAAQC,EAAczE,EAAdyE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1E,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,WAAP,KACE3E,EAAAC,EAAAC,cAAC0E,EAAD,QAOJjB","file":"static/js/main.b1a2583e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name , email}) => {\n    return(\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-2'>\n            <img alt = 'robots' src = {`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n\n    const CardArray = robots.map((user, i) => {\n        return (\n            <Card \n            key={robots.id} \n            id={user.id} //can use user.id OR robots.[i]\n            name={robots[i].name} \n            email={robots[i].email}\n            />\n        );\n    })\n\n    return(\n        <div>\n            {CardArray}\n        </div>\n    );\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfields, searchChange }) => {\n    return(\n        <div className = 'pa2'>\n            <input\n                className = 'pa3 ba b==green bg-lightest-blue'\n                type = 'search'\n                placeholder = 'Search Robots'\n                onChange = {searchChange}\n            />\n        </div>        \n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        <div style = {{ overflowY: 'scroll', border: '3px solid black', height: '800px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots : [],\n            searchfields : ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots : users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfields : event.target.value })\n    }\n\n    render() {\n        const {robots, searchfields} = this.state;\n        const filteredrobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfields.toLowerCase());\n        })\n\n    return !robots.length ?\n        <h1>loading</h1> :\n        (\n            <div className = 'tc'>\n                <h1 className = 'f1'>RoboFriends</h1>\n                <SearchBox searchChange = {this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots = {filteredrobots}/>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}